name: Publish AR-BackEnd image

on:
  push:
    branches:
      - main
  workflow_dispatch:

jobs:
  # fitpin-ar-backend 빌드
  build_fitpin-ar-backend:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        platform:
          - linux/amd64
          - linux/arm64
    env:
      IMAGE_NAME: ghcr.io/fit-pin/fitpin-ar-backend
      FILE_LOCATION: ./AR-BackEnd/
    permissions:
      contents: read
      packages: write
      attestations: write
      id-token: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4.2.1

      - name: Prepare
        run: |
          platform=${{ matrix.platform }}
          echo "PLATFORM_PAIR=${platform//\//-}" >> $GITHUB_ENV

      - name: Log in to the Container registry
        uses: docker/login-action@v3.3.0
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.ACTIONS_TOKEN  }}

      - name: Docker Setup Buildx
        uses: docker/setup-buildx-action@v3.7.1
        with:
          driver: docker-container
          driver-opts: |
            image=moby/buildkit:master
          platforms: ${{ matrix.platform }}

      - name: Build and push by digest
        id: build
        uses: docker/build-push-action@v6.9.0
        with:
          platforms: ${{ matrix.platform }}
          context: ${{ env.FILE_LOCATION }}
          tags: ${{env.IMAGE_NAME}}:latest
          cache-from: type=registry,ref=${{ env.IMAGE_NAME }}:latest
          cache-to: type=inline
          outputs: type=image,name=${{ env.IMAGE_NAME }},push-by-digest=true,name-canonical=true,push=true

      - name: Export digest
        run: |
          mkdir -p /tmp/digests
          digest="${{ steps.build.outputs.digest }}"
          touch "/tmp/digests/${digest#sha256:}"

      - name: Upload digest
        uses: actions/upload-artifact@v4
        with:
          name: digests-${{ env.PLATFORM_PAIR }}
          path: /tmp/digests/*
          if-no-files-found: error
          retention-days: 1

  publish:
    runs-on: ubuntu-latest
    needs:
      - build_fitpin-ar-backend
    steps:
      - name: Download digests
        uses: actions/download-artifact@v4
        with:
          path: /tmp/digests
          pattern: digests-*
          merge-multiple: true

      - name: Log in to the Container registry
        uses: docker/login-action@v3.3.0
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.ACTIONS_TOKEN }}

      - name: Create manifest list and push
        working-directory: /tmp/digests
        run: |
          docker buildx imagetools create $(jq -cr '.tags | map("-t " + .) | join(" ")' <<< "$DOCKER_METADATA_OUTPUT_JSON") \
            $(printf '${{ env.IMAGE_NAME }}@sha256:%s ' *)

      - name: Inspect image
        run: |
          docker buildx imagetools inspect ${{ env.IMAGE_NAME }}:latest
